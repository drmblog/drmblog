{"name":"Assigment 1","tagline":" Lab Report #EURDRM2015","body":"___\r\n# Colophon\r\n1. Operating platform: Mac OS\r\n1. Tools used: Tableu, IA Writer, Markdown syntax’s and Github Pages\r\n1. Goal: get familiar working with new software \r\n___\r\n\r\n#Introduction\r\n\r\nToday, some of our everyday actions are digitized. They are being converted in the numbers, representing the crucial information for intelligence systems in different fields to do their work. The public transportation system in the Netherlands is not an exception in this case as it utilizes digital method to track passengers and calculate the cost of their journeys. In this sense each of the passengers who use the system leaves a feasible digital footprint that can be analyzed. Thinking of that I have decided to execute a *«self-analysis»* by working with data which I generated during my own use of this public transportation system. \r\n___  \r\n#Data gathering\r\n\r\nThe first step was to retrieve the data needed for the analysis. Luckily, the holders of a __personal chipkaart__ (one of the types of cards needed to travel by public transport in Rotterdam) have an access to the online-service dashboard where they can look through their travel history, representing specific details on all transactions made with that card (Figure 1). \r\n\r\n![Figure 1: ov-chipkaart.nl dashboard with travel history](https://github.com/drmblog/report-1/blob/master/images/Figure%201.png?raw=true)\r\n\r\nThe information given to the user provides him with:\r\n\r\n* __date of any action__ (day-month-year),\r\n* __short description__ of that action (check-in, check-out, etc..)\r\n* __location or station__ where the action took place (Centraal Station, Dijkzigt, etc) \r\n* __the amount of money__ involved in the action or fare for the travel (€ 1.27 …)\r\n\r\nThrough the online-system, it was possible to generate expenses overview for each month and download the outcome in comma-separated values files (.csv extension) as tabular data, which was particularly already a structured information rather than raw data. As I have been personally using public transportation system only for a short period of time the total amount of spreadsheets created counted three, each representing period of one month usage [data sources].(https://github.com/drmblog/report-1/tree/master/data) \r\n\r\n___\r\n\r\n#First-take on Tableu software\r\n\r\nWriting this report post-factum, I have a privilege to outline crucial mistakes I have done through my software exploration process and overall workflow with the data. Even though I have worked with data before, for this particular case I somehow missed the step in which I needed to actually review the data gathered, as well as do some *data cleaning* before loading it in the software. After having several issues with data representation I figured out which fields caused problems and edited them in an appropriate way which will be covered later. \r\n\r\nThe first problem I have encountered when I tried to add data to the **Tableu** was that it could not concatenate all __.csv__ files correctly. For unknown reason, trying to do that produced a ridiculously huge amount of rows, which in turn were the exact duplicates of the original ones. For example, trying to connect data from November originally containing 19 rows to October containing respectively 56 rows would produce a result of 1064 rows in total (Figure 2). \r\n\r\n![Figure 2: Error produced by Tableu](https://github.com/drmblog/report-1/blob/master/images/Figure%202.png?raw=true)\r\n\r\nTo overcome the issue, I have loaded all three files independently and used `extract data` on each data file, which enabled me to append data from different data sources to one. I have used `append data from a data source` function on November data and included two other data sources in it, which enriched the original one with all the rows needed (Figure 3). \r\n\r\n![Figure 3: Connected data](https://github.com/drmblog/report-1/blob/master/images/Figure%203.png?raw=true)\r\n\r\nAfter that I have started playing with data. \r\n\r\n___\r\n\r\n#Visualisations\r\n\r\nInitially I have decided to overview my expenses on public transport over time. I have used **transaction** and **date** dimensions  in columns, and amount measure in rows. I have created quick filter from **transaction** dimension, as I wanted to filter out mutually exclusive actions to influence the graph. The `show summary` function activated from worksheet menu, provided me a quick overview of the total amount of transactions, its sum, average, minimum, maximum and median (Figure 4).\r\n\r\n![Figure 4: Expenses over time](https://github.com/drmblog/report-1/blob/master/images/Figure%204.png?raw=true)\r\n\r\nAfter that I have decided to figure out which stations I use the most. At first I started with **departures** stations. I made the data to be presented in a form of **packed bubble** because I thought it was mostly suitable and easily understandable one (Figure 5).\r\n\r\n![Figure 5: Most popular departure station](https://github.com/drmblog/report-1/blob/master/images/Figure%205.png?raw=true)\r\n\r\nSuddenly I have recognized that I do also need a filter in order to push off irrelevant data. For this reason, I have corrected the sheet and made similar visualization for destination stations (Figure 6).\r\n\r\n![Figure 6: Most popular destination station](https://github.com/drmblog/report-1/blob/master/images/Figure%206.png?raw=true)\r\n\r\nWhat was interesting is that I have accidentally combined departure and destination dimensions in one `columns` section and as a result understood that I can visualize my travel routes more precisely covering the whole pathway. I have used side by side bars to easily track the route way and the amount of times I have been on this specific route (Figure 7). \r\n\r\n![Figure 7: Most popular route](https://github.com/drmblog/report-1/blob/master/images/Figure%207.png?raw=true)\r\n\r\nThen I have decided to spice it up a bit, in order to gain info on how much money I have spent on each route. In order to do that, I have brought up the **amount** measure to the graph and used different sorting methods to make it more convenient (arguably) to read and identify my regular budget drainer (Figure 8).  \r\n\r\n![Figure 8: Most popular and costly route so far](https://github.com/drmblog/report-1/blob/master/images/Figure%208.png?raw=true)\r\n\r\nIf I would potentially want to trace the habits of my schedule even more it would be possible to do that by creating a time line of my journeys and `color` the most frequent time I travel on a specific route (Figure 9). \r\n\r\n![Figure 9: Which time do I travel on which routes?](https://github.com/drmblog/report-1/blob/master/images/Figure%209.png?raw=true)\r\n\r\n___\r\n\r\n# Results and conslusion\r\n\r\nWhat was possible to retrieve so far:\r\n\r\n![Figure 10: Tableu Dashboard compiled](https://github.com/drmblog/report-1/blob/master/images/Figure%2010.png?raw=true)\r\n\r\n* Most popular departure station: Beurs, followed by Wilhelminaplein and Kralingse Zoom. \r\n* Most popular destination station: same as departure. \r\n* Most popular route: Beurs - Wilhelminaplein followed by a return journey. \r\n* Most costly and frequent route for budget: The return journey: Wilhelminaplein - Beurs. \r\n* Most likely to meet me: somewhere around 2pm on Beurs - Kralingse Zoom pathway, or in the evening on Beurs - Wilhelminaplein route. \r\n\r\n\r\nIf there was a need, I would definitely take more attention on the data and concentrate also on the discounts I have applied during my journeys. However, for the scope of the primary goal I will limit myself doing that. After All, I believe Tableu provides a very straightforward approach to the workflow with data and makes data visualizations way easier than I expected it to be. Of course, for more interesting results we do need more complex data both in terms of velocity and volume, which would be able to provide more layers and dimensions to dig into.\r\n\r\n\r\n`If you have found any mistakes, please commit! `\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}